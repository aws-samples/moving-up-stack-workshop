Resources:
  S3CFServiceBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: S3CdkStack/S3CFServiceBuild/Role/Resource
  S3CFServiceBuildRoleDefaultPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: S3CFServiceBuild
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: S3CFServiceBuild
                    - :*
          - Action:
              - codebuild:CreateReportGroup
              - codebuild:CreateReport
              - codebuild:UpdateReport
              - codebuild:BatchPutTestCases
              - codebuild:BatchPutCodeCoverages
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":codebuild:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :report-group/
                  - Ref: S3CFServiceBuild
                  - -*
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - S3CFServicePipelineArtifactsBucket
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - S3CFServicePipelineArtifactsBucket
                        - Arn
                    - /*
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - S3CFServicePipelineArtifactsBucketEncryptionKey
                - Arn
          - Action:
              - kms:Decrypt
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - S3CFServicePipelineArtifactsBucketEncryptionKey
                - Arn
        Version: "2012-10-17"
      PolicyName: S3CFServiceBuildRoleDefaultPolicy
      Roles:
        - Ref: S3CFServiceBuildRole
    Metadata:
      aws:cdk:path: S3CdkStack/S3CFServiceBuild/Role/DefaultPolicy/Resource
  S3CFServiceBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: false
        Type: LINUX_CONTAINER
      ServiceRole:
        Fn::GetAtt:
          - S3CFServiceBuildRole
          - Arn
      Source:
        BuildSpec: buildspec.yaml
        Type: CODEPIPELINE
      EncryptionKey:
        Fn::GetAtt:
          - S3CFServicePipelineArtifactsBucketEncryptionKey
          - Arn
      Name: S3CFService_Workshop
    Metadata:
      aws:cdk:path: S3CdkStack/S3CFServiceBuild/Resource
  InvalidateProjectRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: S3CdkStack/InvalidateProject/Role/Resource
  InvalidateProjectRoleDefaultPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: InvalidateProject
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: InvalidateProject
                    - :*
          - Action:
              - codebuild:CreateReportGroup
              - codebuild:CreateReport
              - codebuild:UpdateReport
              - codebuild:BatchPutTestCases
              - codebuild:BatchPutCodeCoverages
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":codebuild:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :report-group/
                  - Ref: InvalidateProject
                  - -*
          - Action: cloudfront:CreateInvalidation
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:cloudfront::"
                  - Ref: AWS::AccountId
                  - :distribution/E19DWYSRTTT9HS
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - S3CFServicePipelineArtifactsBucket
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - S3CFServicePipelineArtifactsBucket
                        - Arn
                    - /*
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - S3CFServicePipelineArtifactsBucketEncryptionKey
                - Arn
          - Action:
              - kms:Decrypt
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - S3CFServicePipelineArtifactsBucketEncryptionKey
                - Arn
        Version: "2012-10-17"
      PolicyName: InvalidateProjectRoleDefaultPolicy
      Roles:
        - Ref: InvalidateProjectRole
    Metadata:
      aws:cdk:path: S3CdkStack/InvalidateProject/Role/DefaultPolicy/Resource
  InvalidateProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: CLOUDFRONT_ID
            Type: PLAINTEXT
            Value: E19DWYSRTTT9HS
        Image: aws/codebuild/standard:1.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: false
        Type: LINUX_CONTAINER
      ServiceRole:
        Fn::GetAtt:
          - InvalidateProjectRole
          - Arn
      Source:
        BuildSpec: |-
          {
            "version": "0.2",
            "phases": {
              "build": {
                "commands": [
                  "aws cloudfront create-invalidation --distribution-id ${CLOUDFRONT_ID} --paths \"/*\""
                ]
              }
            }
          }
        Type: CODEPIPELINE
      EncryptionKey:
        Fn::GetAtt:
          - S3CFServicePipelineArtifactsBucketEncryptionKey
          - Arn
    Metadata:
      aws:cdk:path: S3CdkStack/InvalidateProject/Resource
  S3CFServicePipelineArtifactsBucketEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      KeyPolicy:
        Statement:
          - Action: kms:*
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
            Resource: "*"
        Version: "2012-10-17"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: S3CdkStack/S3CFServicePipeline/ArtifactsBucketEncryptionKey/Resource
  S3CFServicePipelineArtifactsBucketEncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/codepipeline-s3cdkstacks3cfservicepipeline8d837380
      TargetKeyId:
        Fn::GetAtt:
          - S3CFServicePipelineArtifactsBucketEncryptionKey
          - Arn
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: S3CdkStack/S3CFServicePipeline/ArtifactsBucketEncryptionKeyAlias/Resource
  S3CFServicePipelineArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID:
                Fn::GetAtt:
                  - S3CFServicePipelineArtifactsBucketEncryptionKey
                  - Arn
              SSEAlgorithm: aws:kms
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: S3CdkStack/S3CFServicePipeline/ArtifactsBucket/Resource
  S3CFServicePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: S3CdkStack/S3CFServicePipeline/Role/Resource
  S3CFServicePipelineRoleDefaultPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - S3CFServicePipelineArtifactsBucket
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - S3CFServicePipelineArtifactsBucket
                        - Arn
                    - /*
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - S3CFServicePipelineArtifactsBucketEncryptionKey
                - Arn
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - S3CFServicePipelineS3CFServiceSourceCheckoutCodePipelineActionRole
                - Arn
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - S3CFServicePipelineS3CFServiceBuildBuildStaticSiteCodePipelineActionRole
                - Arn
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - S3CFServicePipelineS3CFServiceDeploymentS3DeploymentCodePipelineActionRole
                - Arn
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - S3CFServicePipelineS3CFServiceDeploymentInvalidateCacheCodePipelineActionRole
                - Arn
        Version: "2012-10-17"
      PolicyName: S3CFServicePipelineRoleDefaultPolicy
      Roles:
        - Ref: S3CFServicePipelineRole
    Metadata:
      aws:cdk:path: S3CdkStack/S3CFServicePipeline/Role/DefaultPolicy/Resource
  S3CFServicePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn:
        Fn::GetAtt:
          - S3CFServicePipelineRole
          - Arn
      Stages:
        - Actions:
            - ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              Configuration:
                ConnectionArn: '{{ service.repository_connection_arn }}'
                FullRepositoryId: '{{ service.repository_id }}'
                BranchName: '{{ service.branch_name }}'
              Name: Checkout
              OutputArtifacts:
                - Name: Artifact_S3CFServiceSource_Checkout
              RoleArn:
                Fn::GetAtt:
                  - S3CFServicePipelineS3CFServiceSourceCheckoutCodePipelineActionRole
                  - Arn
              RunOrder: 1
          Name: S3CFServiceSource
        - Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName:
                  Ref: S3CFServiceBuild
              InputArtifacts:
                - Name: Artifact_S3CFServiceSource_Checkout
              Name: BuildStaticSite
              OutputArtifacts:
                - Name: Artifact_S3CFServiceBuild_BuildStaticSite
              RoleArn:
                Fn::GetAtt:
                  - S3CFServicePipelineS3CFServiceBuildBuildStaticSiteCodePipelineActionRole
                  - Arn
              RunOrder: 1
          Name: S3CFServiceBuild
        - Actions:
            - ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: "1"
              Configuration:
                BucketName: awsproton-s3-static-site-cloudformation-s3bucket-1qy3upodyqjsl
                Extract: "true"
              InputArtifacts:
                - Name: Artifact_S3CFServiceBuild_BuildStaticSite
              Name: S3Deployment
              RoleArn:
                Fn::GetAtt:
                  - S3CFServicePipelineS3CFServiceDeploymentS3DeploymentCodePipelineActionRole
                  - Arn
              RunOrder: 1
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName:
                  Ref: InvalidateProject
              InputArtifacts:
                - Name: Artifact_S3CFServiceBuild_BuildStaticSite
              Name: InvalidateCache
              RoleArn:
                Fn::GetAtt:
                  - S3CFServicePipelineS3CFServiceDeploymentInvalidateCacheCodePipelineActionRole
                  - Arn
              RunOrder: 2
          Name: S3CFServiceDeployment
      ArtifactStore:
        EncryptionKey:
          Id:
            Fn::GetAtt:
              - S3CFServicePipelineArtifactsBucketEncryptionKey
              - Arn
          Type: KMS
        Location:
          Ref: S3CFServicePipelineArtifactsBucket
        Type: S3
      Name: S3CFService-Pipeline
    DependsOn:
      - S3CFServicePipelineRoleDefaultPolicy
      - S3CFServicePipelineRole
    Metadata:
      aws:cdk:path: S3CdkStack/S3CFServicePipeline/Resource
  S3CFServicePipelineS3CFServiceSourceCheckoutCodePipelineActionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: S3CdkStack/S3CFServicePipeline/S3CFServiceSource/Checkout/CodePipelineActionRole/Resource
  S3CFServicePipelineS3CFServiceSourceCheckoutCodePipelineActionRoleDefaultPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: codestar-connections:UseConnection
            Effect: Allow
            Resource: arn:aws:codestar-connections:us-east-1:724050724157:connection/a777e566-e814-43b1-af2e-b95229e78e4a
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - S3CFServicePipelineArtifactsBucket
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - S3CFServicePipelineArtifactsBucket
                        - Arn
                    - /*
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - S3CFServicePipelineArtifactsBucketEncryptionKey
                - Arn
          - Action: s3:PutObjectAcl
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - S3CFServicePipelineArtifactsBucket
                      - Arn
                  - /*
        Version: "2012-10-17"
      PolicyName: S3CFServicePipelineS3CFServiceSourceCheckoutCodePipelineActionRoleDefaultPolicy
      Roles:
        - Ref: S3CFServicePipelineS3CFServiceSourceCheckoutCodePipelineActionRole
    Metadata:
      aws:cdk:path: S3CdkStack/S3CFServicePipeline/S3CFServiceSource/Checkout/CodePipelineActionRole/DefaultPolicy/Resource
  S3CFServicePipelineS3CFServiceBuildBuildStaticSiteCodePipelineActionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: S3CdkStack/S3CFServicePipeline/S3CFServiceBuild/BuildStaticSite/CodePipelineActionRole/Resource
  S3CFServicePipelineS3CFServiceBuildBuildStaticSiteCodePipelineActionRoleDefaultPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - codebuild:StopBuild
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - S3CFServiceBuild
                - Arn
        Version: "2012-10-17"
      PolicyName: S3CFServicePipelineS3CFServiceBuildBuildStaticSiteCodePipelineActionRoleDefaultPolicy
      Roles:
        - Ref: S3CFServicePipelineS3CFServiceBuildBuildStaticSiteCodePipelineActionRole
    Metadata:
      aws:cdk:path: S3CdkStack/S3CFServicePipeline/S3CFServiceBuild/BuildStaticSite/CodePipelineActionRole/DefaultPolicy/Resource
  S3CFServicePipelineS3CFServiceDeploymentS3DeploymentCodePipelineActionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: S3CdkStack/S3CFServicePipeline/S3CFServiceDeployment/S3Deployment/CodePipelineActionRole/Resource
  S3CFServicePipelineS3CFServiceDeploymentS3DeploymentCodePipelineActionRoleDefaultPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:DeleteObject*
              - s3:PutObject
              - s3:Abort*
            Effect: Allow
            Resource:
              - arn:aws:s3:::awsproton-s3-static-site-cloudformation-s3bucket-1qy3upodyqjsl
              - arn:aws:s3:::awsproton-s3-static-site-cloudformation-s3bucket-1qy3upodyqjsl/*
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - S3CFServicePipelineArtifactsBucket
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - S3CFServicePipelineArtifactsBucket
                        - Arn
                    - /*
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - S3CFServicePipelineArtifactsBucketEncryptionKey
                - Arn
        Version: "2012-10-17"
      PolicyName: S3CFServicePipelineS3CFServiceDeploymentS3DeploymentCodePipelineActionRoleDefaultPolicy
      Roles:
        - Ref: S3CFServicePipelineS3CFServiceDeploymentS3DeploymentCodePipelineActionRole
    Metadata:
      aws:cdk:path: S3CdkStack/S3CFServicePipeline/S3CFServiceDeployment/S3Deployment/CodePipelineActionRole/DefaultPolicy/Resource
  S3CFServicePipelineS3CFServiceDeploymentInvalidateCacheCodePipelineActionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: S3CdkStack/S3CFServicePipeline/S3CFServiceDeployment/InvalidateCache/CodePipelineActionRole/Resource
  S3CFServicePipelineS3CFServiceDeploymentInvalidateCacheCodePipelineActionRoleDefaultPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - codebuild:StopBuild
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - InvalidateProject
                - Arn
        Version: "2012-10-17"
      PolicyName: S3CFServicePipelineS3CFServiceDeploymentInvalidateCacheCodePipelineActionRoleDefaultPolicy
      Roles:
        - Ref: S3CFServicePipelineS3CFServiceDeploymentInvalidateCacheCodePipelineActionRole
    Metadata:
      aws:cdk:path: S3CdkStack/S3CFServicePipeline/S3CFServiceDeployment/InvalidateCache/CodePipelineActionRole/DefaultPolicy/Resource
Outputs:
  PipelineEndpoint:
    Description: The URL to access the pipeline
    Value: https://${AWS::Region}.console.aws.amazon.com/codesuite/codepipeline/pipelines/${Pipeline}/view?region=${AWS::Region}

